openapi: 3.0.3
info:
  title: Transaction API
  description: >
    An API for managing transactions of selling for Sellers and Affiliates based
    on a .txt file. Allows fetching seller balance and searching transactions by
    imported transaction ID.
  contact:
    email: cleversonsoares.zero@gmail.com
  version: 1.0.11
servers:
  - url: "http://localhost:3000/api/v1"
  - url: "http://localhost:4000/api/v1"
tags:
  - name: transaction
    description: Access to Transaction domain
  - name: auth
    description: Authentication and authorization
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Authenticate user and generate a JWT token
      description: >-
        Authenticate user by providing email and password, and generate a JWT
        token upon successful authentication.
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: Successful authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token
          headers:
            Authorization:
              description: Bearer token to be included in future requests
              schema:
                type: string
                example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
  /transaction/file-transactions:
    post:
      tags:
        - transaction
      summary: Imports a list of transactions
      description: ""
      operationId: importTransaction
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileIDResponse"
      security:
        - bearerAuth: []
  "/file-transactions/{id}/transactions":
    get:
      tags:
        - transaction
      summary: List transactions by ID
      description: ""
      operationId: listTransactionsById
      parameters:
        - name: id
          in: path
          description: ID of the file containing transactions
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
      security:
        - bearerAuth: []
components:
  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 28d64e23-9ad2-48f4-88f7-6733dc1c9770
        t_type:
          type: integer
          description: Transaction type
          enum:
            - 1
            - 2
            - 3
            - 4
        t_date:
          type: string
          format: date-time
        product_id:
          type: string
          format: uuid
          example: 28d64e23-9ad2-48f4-88f7-6733dc1c9770
        amount:
          type: number
        seller_id:
          type: string
          format: uuid
          example: 28d64e23-9ad2-48f4-88f7-6733dc1c9770
        created_at:
          type: string
          format: date-time
    FileIDResponse:
      type: object
      properties:
        id:
          type: string
      xml:
        name: "##default"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
